<?php

namespace ServiceJF\ChallengeCSSBundle\Repository;

use ServiceJF\ChallengeCSSBundle\Entity\Player;
use ServiceJF\CoreBundle\Entity\Season;

/**
 * GameRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GameRepository extends \Doctrine\ORM\EntityRepository
{
    public function findToBeFilledGames(Season $season)
    {
        $qb = $this->createQueryBuilder('g');
        $now = new \DateTime();

        return $qb->where('g.season = :season')
            ->andWhere($qb->expr()->isNull('g.director'))
            ->andWhere('g.date < :now')
            ->setParameters(array(
                'season' => $season,
                'now' => $now
            ))
            ->orderBy('g.date', 'ASC')
            ->getQuery()
            ->getResult();
    }

    public function findFilledGames(Season $season)
    {
        $qb = $this->createQueryBuilder('g');

        return $qb->where('g.season = :season')
            ->andWhere($qb->expr()->isNotNull('g.director'))
            ->setParameters(array(
                'season' => $season
            ))
            ->orderBy('g.date', 'DESC')
            ->getQuery()
            ->getResult();
    }

    public function findByPlayer(Player $player, Season $season)
    {
        return $this->createQueryBuilder('g')
            ->where('g.season = :season')
            ->andWhere('g.director = :user')
            ->setParameters(array(
                'season' => $season,
                'user' => $player->getUser()
            ))
            ->orderBy('g.date', 'DESC')
            ->getQuery()
            ->getResult();
    }
}
